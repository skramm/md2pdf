#!/usr/bin/env bash

# https://github.com/skramm/md2pdf

# 2025/03: tested with pdfcpu 0.9.1
# https://github.com/pdfcpu/pdfcpu

version=20250310

function checkreq
{
	which $1 > /dev/null
	if [ $? != 0 ]
	then
		echo "ERROR: it seems you don't have $1 installed on your system, please install first"
		echo "with 'sudo apt install $1' (or whatever way you use to install stuff)."
		exit 1;
	fi
}

set +x
#echo "pwd=$(pwd)"
#echo "last arg=${!#}"
#echo "nb args=$#"

if [ $# = 0 ]
then
	echo "md2pdf version: $version, https://github.com/skramm/md2pdf"
	echo "usage: md2pdf [-L] filename.md"
	exit 1
fi

filename=${!#}

if ! [ -e "$filename" ]
then
	echo "md2dpf: can't find file $filename, exiting"
	exit 2
fi

checkreq pandoc
checkreq wkhtmltopdf

haspdfcpu=true
which pdfcpu > /dev/null
if [ $? != 0 ]; then
	echo "md2dpf: pdfcpu not installed, no page numbers printed on output pdf file"
	haspdfcpu=false
fi
# output logs are stored here:
mkdir -p /tmp/md2pdf

landscape=false
if [ $# -gt 1 ]
then
	if [ $1 = "-L" ]
	then
		echo "md2pdf: Landscape mode"
		landscape=true
	else
		echo "md2pdf: unrecognized option '$1', ignoring"
	fi
fi	

# remove file extension
b=${filename%.*}
#echo "b=$b"

ext=${filename##*.}
#echo "ext=$ext"

# remove path
name=${b##*/}  
#echo "name=$name"

# path only (needed to get the images)
loc=${filename%/*}
#echo "loc=$loc"

echo "md2pdf: converting file $filename to $b.pdf"

# if the location, as determined by above, is a folder, then
# "cd" into it
isDirectory=false
if [ -d "$loc" ]
then
	pushd "$loc" >/dev/null
	isDirectory=true
fi

opt=
if [ $landscape = true ]
then
	opt="--pdf-engine-opt=-O --pdf-engine-opt=Landscape"
fi

# if source folder holds a file md2pdf.css, then use it instead of the default one
cssfile=/usr/local/share/md2pdf/md2pdf.css
if [ -f md2pdf.css ]
then
	echo "md2dpf: using local CSS file"
	cssfile=md2pdf.css
else
	echo "md2dpf: using default CSS file"
fi

pandoc -V papersize=A4 \
	--standalone \
	--verbose \
	--template=/usr/local/share/md2pdf/mytemplate.html5 \
	--css=$cssfile \
	--metadata pagetitle="$name" \
	--pdf-engine-opt=--enable-local-file-access \
	$opt \
	-V margin-left=0.7in \
	-V margin-right=0.7in \
	-V margin-top=0.7in \
	-V margin-bottom=0.7in \
	--from commonmark+autolink_bare_uris+pipe_tables \
	-t html \
	"$name.$ext" -o /tmp/md2pdf/out.pdf 1>"/tmp/md2pdf/md2pdf_$name.stdout" 2>"/tmp/md2pdf/md2pdf_$name.stderr"

err=$?
if [ $err != 0 ]
then
	echo -e "md2pdf: \e[31mFailure\e[0m, Pandoc returned $err instead of 0, something might gone wrong, check logs in /tmp/md2pdf"
	echo "Hit a key"
	exit 3
	read
else
	echo -e "md2pdf: \e[32mSuccess!\e[0m"
fi

# adding page number with pdfcpu
# https://pdfcpu.io/core/stamp
# pos: see https://pdfcpu.io/getting_started/box
# bc: bottom center
# op: opacity
if [ haspdfcpu = true ]
then
	pdfcpu stamp add -mode text -- "p. %p/%P" "scale:.6 abs, op:0.95, pos:bc, rot:0, margins:20" \
		/tmp/md2pdf/out.pdf \
		"$name.pdf"
else
	cp /tmp/md2pdf/out.pdf "$name.pdf"
fi

# this is required, because if started from shell, we did not change current folder
if [ isDirectory = true ]
then
	popd >/dev/null
fi


